name: 'C++ CI'

on:
  push:
    branches:
      - feature
      - lab3

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    permissions: write-all
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number}}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

  release_assets_ubuntu:
    needs: create_release
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Use Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      
      - name: Build Project
        run: |
          sudo apt-get update
          cmake --preset=GCC
          cmake . -DPATCH_VERSION=${{ github.run_number }}
          cmake --build ./GCC
          cmake --build ./GCC --target package

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url}}
          asset_name: containers-0.0.${{ github.run_number }}-Linux.deb
          asset_path: ./containers-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

  release_assets_win:
    needs: create_release
    runs-on: windows-latest
    permissions: write-all
    steps:
      - name: Use Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
        
      - name: Build Project
        run: |
          cmake --preset=MSVC
          cmake . -DPATCH_VERSION=${{ github.run_number }}
          cmake --build ./MSVC
          cmake --build ./MSVC --target package

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./containers-0.0.${{ github.run_number }}-win64.zip
          asset_name: containers-0.0.${{ github.run_number }}-win64.zip
          asset_content_type: application/zip